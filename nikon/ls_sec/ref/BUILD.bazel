load("//cmd/patch_so:patch_so.bzl", "patched_so")
load("//nikon/ls_sec/ref:version_script.bzl", "version_script")

cc_library(
    name = "ref",
    srcs = ["ref.c"],
    copts = [
        "-Wno-ignored-attributes",
        "-Wno-incompatible-pointer-types",
        "-Wno-int-conversion",
        "-Wno-pointer-sign",
        "-Wno-pointer-to-int-cast",
    ],
    deps = [
        "@hexray_tools//:defs",
    ],
)

cc_test(
    name = "ref_test",
    srcs = ["ref_test.cc"],
    deps = [
        ":ref",
        "//nikon/ls_sec",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_binary(
    name = "x86_64",
    srcs = [
        "x86_64.cc",
        ":ls_sec",
        ":w",
    ],
)

patched_so(
    name = "ls_sec",
    src = "//third_party/snapbridge:ls_sec_jni_so",
    patch_str = {
        # Match rule name.
        "libLsSec-jni.so": "libls_sec.so",
        # Replace libc.so with a stub.
        "libc.so": "libw.so",
    },
    remove_deps = [
        # keep sorted
        "libdl.so",
        "libm.so",
        "libstdc++.so",
    ],
)

cc_library(
    name = "w",
    srcs = ["w.cc"],
    copts = ["-fuse-cxa-atexit"],
    linkopts = ["-Wl,--version-script=$(location :w_lds)"],
    linkstatic = False,
    deps = [":w_lds"],
)

version_script(
    name = "w_lds",
    src = "w.lds",
)
